# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build example - Open IoT SDK

on:
    push:
    pull_request:
    workflow_dispatch:

concurrency:
    group: ${{ github.ref }}-${{ github.workflow }}-${{ (github.event_name == 'pull_request' && github.event.number) || (github.event_name == 'workflow_dispatch' && github.run_number) || github.sha }}
    cancel-in-progress: true

jobs:
    pre_job:
      runs-on: ubuntu-latest
      # Map a step output to a job output
      outputs:
        should_skip: ${{ steps.skip_check.outputs.should_skip }}
      steps:
        - id: skip_check
          uses: fkirc/skip-duplicate-actions@v5
          with:
            # Skip concurrent workflows with the same content.
            # Cancel running workflows from outdatead commits.
            # Do not skip pull requests - essential for running unit-tests.
            # Skip if an already finished duplicate run can be found.
            concurrent_skipping: 'same_content'
            cancel_others: 'true'
            do_not_skip: '["workflow_dispatch", "pull_request"]'
            skip_after_successful_duplicate: 'true'

    openiotsdk:
        strategy:
            fail-fast: false
            matrix:
                socketAPI: ["iotsocket", "lwip"]
                
        name: Open IoT SDK examples building
        timeout-minutes: 60

        needs: pre_job

        strategy:
            matrix:
                build_variant: [no-ble-tsan-clang]
                chip_tool: [""]
        env:
            TEST_NETWORK_NAME: OIStest
            BUILD_VARIANT: ${{matrix.build_variant}}
            CHIP_TOOL_VARIANT: ${{matrix.chip_tool}}
            TSAN_OPTIONS: "halt_on_error=1 suppressions=scripts/tests/chiptest/tsan-linux-suppressions.txt"
            LSAN_OPTIONS: detect_leaks=1

        runs-on: ubuntu-latest
        if: github.actor != 'restyled-io[bot]' && needs.pre_job.outputs.should_skip != 'true'

        container:
            image: connectedhomeip/chip-build-openiotsdk:0.6.06
            volumes:
                - "/tmp/bloat_reports:/tmp/bloat_reports"
            options: --privileged

        steps:
            - uses: Wandalen/wretry.action@v1.0.36
              name: Checkout
              with:
                  action: actions/checkout@v3
                  with: |
                      token: ${{ github.token }}
                  attempt_limit: 3
                  attempt_delay: 2000
            - name: Checkout submodules
              run: scripts/checkout_submodules.py --shallow --recursive --platform openiotsdk

            - name: Set up environment for size reports
              if: ${{ !env.ACT }}
              env:
                  GH_CONTEXT: ${{ toJson(github) }}
              run: scripts/tools/memory/gh_sizes_environment.py "${GH_CONTEXT}"

            - name: Bootstrap
              timeout-minutes: 10
              run: scripts/build/gn_bootstrap.sh

            - name: Install dependencies
              timeout-minutes: 10
              run: apt update && apt install -y netcat

            - name: Build and install Python controller
              timeout-minutes: 10
              run: |
                  scripts/run_in_build_env.sh './scripts/build_python.sh --install_wheel build-env'

            - name: Build shell example
              id: build_shell
              timeout-minutes: 10
              run: |
                  scripts/examples/openiotsdk_example.sh -S ${{ matrix.socketAPI }} shell
                  .environment/pigweed-venv/bin/python3 scripts/tools/memory/gh_sizes.py \
                    openiotsdk release shell \
                    examples/shell/openiotsdk/build/chip-openiotsdk-shell-example.elf \
                    /tmp/bloat_reports/

            - name: Build lock-app example
              id: build_lock_app
              timeout-minutes: 10
              run: |
                  scripts/examples/openiotsdk_example.sh -S ${{ matrix.socketAPI }} lock-app
                  .environment/pigweed-venv/bin/python3 scripts/tools/memory/gh_sizes.py \
                    openiotsdk release lock-app \
                    examples/lock-app/openiotsdk/build/chip-openiotsdk-lock-app-example.elf \
                    /tmp/bloat_reports/

            - name: Build All Clusters App
              id: build_all_clusters_app
              timeout-minutes: 10
              run: |
                  scripts/examples/openiotsdk_example.sh all-clusters-app
                  .environment/pigweed-venv/bin/python3 scripts/tools/memory/gh_sizes.py \
                    openiotsdk release all-clusters-app \
                    examples/all-clusters-app/openiotsdk/build/chip-openiotsdk-all-clusters-app-example.elf \
                    /tmp/bloat_reports/

            - name: Build Chip Tool
              id: build_chip_tool
              timeout-minutes: 10
              run: |
                  scripts/run_in_build_env.sh \
                     "./scripts/build/build_examples.py \
                        --target linux-x64-chip-tool${CHIP_TOOL_VARIANT}-${BUILD_VARIANT} \
                        build \
                        --copy-artifacts-to objdir-clone \
                    "

            - name: Build unit tests
              id: build_unit_tests
              timeout-minutes: 10
              run: |
                  scripts/examples/openiotsdk_example.sh -S ${{ matrix.socketAPI }} unit-tests

            - name: "Test: shell example"
              if: steps.build_shell.outcome == 'success'
              timeout-minutes: 5
              run: |
                  scripts/examples/openiotsdk_example.sh -C test shell

            - name: "Test: lock-app example"
              if: steps.build_lock_app.outcome == 'success'
              timeout-minutes: 5
              run: |
                  scripts/setup/openiotsdk/network_setup.sh -n $TEST_NETWORK_NAME up
                  scripts/run_in_ns.sh ${TEST_NETWORK_NAME}ns scripts/examples/openiotsdk_example.sh -C test -n ${TEST_NETWORK_NAME}tap lock-app
                  scripts/setup/openiotsdk/network_setup.sh -n $TEST_NETWORK_NAME down
            
            - name: "Test: unit-tests"
              if: steps.build_unit_tests.outcome == 'success' && github.event_name == 'pull_request'
              timeout-minutes: 30
              run: |
                  scripts/examples/openiotsdk_example.sh -C test unit-tests

            - name: Run Certification Tests
              timeout-minutes: 65
              run: |
                  bash -c "time ./scripts/run_in_build_env.sh \
                  \"./scripts/tests/run_test_suite.py \
                     --chip-tool ./out/linux-x64-chip-tool${CHIP_TOOL_VARIANT}-${BUILD_VARIANT}/chip-tool \
                     run \
                     --iterations 1 \
                     --test-timeout-seconds 120 \
                     --network fvp \
                     --ignore-missing \
                     --lock-app \
                      ./scripts/tests/fvp_wrapper.sh,$(which FVP_Corstone_SSE-300_Ethos-U55),-f,./scripts/tests/MPS3.conf,--,./examples/lock-app/openiotsdk/build/chip-openiotsdk-lock-app-example.elf \
                     --all-clusters-app \
                      ./scripts/tests/fvp_wrapper.sh,$(which FVP_Corstone_SSE-300_Ethos-U55),-f,scripts/tests/MPS3.conf,--,./examples/all-clusters-app/openiotsdk/build/chip-openiotsdk-all-clusters-app-example.elf \
                  \" \
                  "
